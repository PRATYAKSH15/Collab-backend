// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  password      String
  documents     Document[]      // docs owned by the user
  collaborations Collaborator[] // docs shared with this user
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Document {
  id           String         @id @default(uuid())
  title        String
  content      Json?          // latest autosave snapshot
  owner        User           @relation(fields: [ownerId], references: [id])
  ownerId      String
  versions     Version[]
  collaborators Collaborator[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Version {
  id        String   @id @default(uuid())
  snapshot  Json     // editor state snapshot (TipTap/Y.js JSON)
  createdAt DateTime @default(now())
  doc       Document @relation(fields: [docId], references: [id])
  docId     String
}

model Collaborator {
  id         String     @id @default(uuid())
  role       Role       @default(EDITOR)
  user       User       @relation(fields: [userId], references: [id])
  userId     String
  document   Document   @relation(fields: [docId], references: [id])
  docId      String

  createdAt  DateTime   @default(now())

  @@unique([userId, docId]) // a user canâ€™t be added twice to the same doc
}

enum Role {
  VIEWER   // read-only access
  EDITOR   // can edit
}
